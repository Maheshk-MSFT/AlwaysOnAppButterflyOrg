// This looks at the state of the storage account that is used for the checkpoint data from Event Hub
let _maxAge = 2d; // Only include data from the last two days
let _timespanStart = ago(_maxAge); // Start time for the timespan
let _timespanEnd = now(-2m); // there is some ingestion lag, so we account for this by stripping the last 2m
let Thresholds=datatable(MetricName: string, YellowThreshold: double, RedThreshold: double) [
    // Average Latency in milliseconds
    "averageLatency", 100, 200,
    // Number of non-successful requests
    "failureCount", 2, 5
    ];
//
// First we count storage errors as reported in the StorageBlobLogs table
let storageErrors= StorageBlobLogs
| where TimeGenerated > _timespanStart
| where AccountName endswith "prist"
| where StatusText != "Success"
| summarize Value=count() by AccountName,bin(TimeGenerated, 1m)
| extend Value=toreal(Value), MetricName='failureCount';
//
// Now we join the storage errors with the metrics table from which we query the average success latency for storage requests
let avgLatency = AzureMetrics
| where TimeGenerated > _timespanStart
| where ResourceProvider == "MICROSOFT.STORAGE"
| where ResourceId endswith "PRIST/BLOBSERVICES/DEFAULT" // We are only interested in this specific storage account
| where MetricName == "SuccessE2ELatency"
| extend Value=Average, MetricName='averageLatency';
//
let storageErrorSeries = storageErrors // This series defaults to 0
| make-series Value=sum(Value) default=0 on TimeGenerated from _timespanStart to _timespanEnd step 1m by MetricName
| mv-expand TimeGenerated, Value
| extend TimeGenerated = todatetime(TimeGenerated), Value=toreal(Value);
//
let avgLatencySeries = avgLatency // This series defaults to the last known value
| make-series Value=sum(Value) default=double(null) on TimeGenerated from _timespanStart to _timespanEnd step 1m by MetricName
| extend Value = series_fill_forward(Value) // Use the last value for any missing points
| mv-expand TimeGenerated, Value
| extend TimeGenerated = todatetime(TimeGenerated), Value=toreal(Value);
//
storageErrorSeries
| union avgLatencySeries
| lookup kind = inner Thresholds on MetricName
| extend IsYellow = iff(todouble(Value) > YellowThreshold and todouble(Value) < RedThreshold, 1, 0)
| extend IsRed = iff(todouble(Value) > RedThreshold, 1, 0)
| extend ComponentName="CheckpointStorage"